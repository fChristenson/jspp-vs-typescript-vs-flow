<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>jspp</string>
		<string>jpp</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(\{\s*(//.*)?$|^\s*// \{\{\{)</string>
	<key>foldingStopMarker</key>
	<string>^\s*(\}|// \}\}\}$)</string>
	<key>keyEquivalent</key>
	<string>^~J</string>
	<key>name</key>
	<string>JS++</string>
	
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.package.jspp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.package.jspp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.jspp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(package)\b(?:\s*([^ ;$]+)\s*(;)?)?</string>
			<key>name</key>
			<string>meta.package.jspp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.import.jspp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.import.jspp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.jspp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(import)\b(?:\s*([^ ;$]+)\s*(;)?)?</string>
			<key>name</key>
			<string>meta.import.jspp</string>
			
		 </dict>
			<dict>
			<key>begin</key>
			<string>(^|&amp;&amp;|\|\||!)\s*(/)(?![/*+{}?])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)[igm]*</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\;</string>
			<key>name</key>
			<string>punctuation.terminator.statement.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>,[ |\t]*</string>
			<key>name</key>
			<string>meta.delimiter.object.comma.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\.</string>
			<key>name</key>
			<string>meta.delimiter.method.period.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\{|\}</string>
			<key>name</key>
			<string>meta.brace.curly.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(|\)</string>
			<key>name</key>
			<string>meta.brace.round.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[|\]</string>
			<key>name</key>
			<string>meta.brace.square.js</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#code</string>
		</dict>
	
	</array>
	
	<key>repository</key>
	
	<dict>

		<key>all-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#primitive-arrays</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primitive-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object-types</string>
				</dict>
			</array>
		</dict>
		<key>annotations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(@[^ (]+)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.annotation.jspp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.annotation-arguments.begin.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.annotation-arguments.end.jspp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.declaration.annotation.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.other.key.jspp</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.jspp</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\w*)\s*(=)</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.seperator.property.jspp</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>@\w*</string>
					<key>name</key>
					<string>storage.type.annotation.jspp</string>
				</dict>
			</array>
		</dict>
		<key>anonymous-classes-and-new</key>
		<dict>
			<key>begin</key>
			<string>\bnew\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.new.jspp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\)|\])(?!\s*{)|(?&lt;=})|(?=;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\w+)\s*(?=\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}|(?=;|\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\[</string>
							<key>end</key>
							<string>\]</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\w.*\()</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.jspp</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>name</key>
					<string>meta.inner-class.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-body</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>assertions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(assert)\s</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.assert.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.declaration.assertion.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>:</string>
							<key>name</key>
							<string>keyword.operator.assert.expression-seperator.jspp</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>class</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*(?:class|(?:@)?interface|enum)\s+\w+)</string>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.end.jspp</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.jspp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				
				<dict>
					<key>include</key>
					<string>#object-types-inherited</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.jspp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.jspp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(class|(?:@)?interface|enum)\s+(\w+)</string>
					<key>name</key>
					<string>meta.class.identifier.jspp</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>extends</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.extends.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={|implements)</string>
					<key>name</key>
					<string>meta.definition.class.inherited.classes.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types-inherited</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(implements)\s</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.implements.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s*extends|\{)</string>
					<key>name</key>
					<string>meta.definition.class.implemented.interfaces.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types-inherited</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.class.body.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-body</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>class-body</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enums</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#methods</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotations</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#code</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class</string>
				</dict>
			</array>
		</dict>
		<key>code</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.jspp</string>
						</dict>
					    <key>2</key>
						<dict>
							<key>name</key>
							<string>variable.language.jspp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dereference.jspp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.language.jspp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(module)\s+([\w\.]+)</string>
					<key>name</key>
					<string>meta.class.identifier.jspp</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.jspp</string>
						</dict>
					    <key>2</key>
						<dict>
							<key>name</key>
							<string>variable.language.jspp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dereference.jspp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.jspp</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.jspp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.jspp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.language.jspp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(module|class|(?:@)?interface|enum)\s+(\w+)</string>
					<key>name</key>
					<string>meta.class.identifier.jspp</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>

				<dict>
					<key>include</key>
					<string>#assertions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parens</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants-and-special-vars</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|d|D)?\b</string>
					<key>name</key>
					<string>constant.numeric.source.jspp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#anonymous-classes-and-new</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#all-types</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.jspp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(r"""/\*((?:.|\n)*?)\*/""")|(r'''/\*((?:.|\n)*?)\*/''')</string>
					<key>name</key>
					<string>comment.block.empty.jspp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments-jsppDoc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments-inline</string>
				</dict>
			</array>
		</dict>
		<key>comments-inline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.jspp</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.double-slash.jspp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.jspp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*((//).*$\n?)</string>
				</dict>
			</array>
		</dict>
	<key>comments-jsppDoc</key>
	<dict>
		<key>patterns</key>
		<array>
			<dict>
				<key>begin</key>
				<string>(/\*\*)\s*$</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.begin.jsppDoc</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\*/</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.jsppDoc</string>
					</dict>
				</dict>
				<key>name</key>
				<string>comment.block.documentation.jsppDoc</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#invalid</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>\*\s*(?=\w)</string>
						<key>contentName</key>
						<string>text.html</string>
						<key>end</key>
						<string>(?=\s*\*\s*@)|(?=\s*\*\s*/)</string>
						<key>name</key>
						<string>meta.documentation.comment.jsppDoc</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#inline</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>\*\s*(\{{.*\}})</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.other.documentation.return.jsppDoc</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.keyword.jsppDoc</string>
							</dict>
						</dict>
						<key>contentName</key>
						<string>text.html</string>
						<key>end</key>
						<string>\*</string>
						<key>name</key>
						<string>comment.block.jspp</string>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.other.documentation.custom.jsppDoc</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.keyword.jsppDoc</string>
							</dict>
						</dict>
						<key>match</key>
						<string>\*\s*((\@)\S+)\s</string>
					</dict>
				</array>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<key>inline</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#invalid</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#inline-formatting</string>
					</dict>
					<dict>
						<key>include</key>
						<string>text.html.basic</string>
					</dict>
					<dict>
						<key>match</key>
						<string>((https?|s?ftp|ftps|file|smb|afp|nfs|(x-)?man|gopher|txmt)://|mailto:)[-:@a-zA-Z0-9_.~%+/?=&amp;#]+(?&lt;![.?:])</string>
						<key>name</key>
						<string>markup.underline.link</string>
					</dict>
				</array>
			</dict>
			<key>inline-formatting</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>(\{)((\@)code)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.begin.jsppDoc</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.other.documentation.directive.code.jsppDoc</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.keyword.jsppDoc</string>
							</dict>
						</dict>
						<key>contentName</key>
						<string>markup.raw.code.jsppDoc</string>
						<key>end</key>
						<string>\}</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.end.jsppDoc</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.directive.code.jsppDoc</string>
						<key>patterns</key>
						<array/>
					</dict>
					<dict>
						<key>begin</key>
						<string>(\{)((\@)literal)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.begin.jsppDoc</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.other.documentation.directive.literal.jsppDoc</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.keyword.jsppDoc</string>
							</dict>
						</dict>
						<key>contentName</key>
						<string>markup.raw.literal.jsppDoc</string>
						<key>end</key>
						<string>\}</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.end.jsppDoc</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.directive.literal.jsppDoc</string>
						<key>patterns</key>
						<array/>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.begin.jsppDoc</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.other.documentation.directive.docRoot.jsppDoc</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.keyword.jsppDoc</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.end.jsppDoc</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(\{)((\@)docRoot)(\})</string>
						<key>name</key>
						<string>meta.directive.docRoot.jsppDoc</string>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.begin.jsppDoc</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.other.documentation.directive.inheritDoc.jsppDoc</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.keyword.jsppDoc</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.end.jsppDoc</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(\{)((\@)inheritDoc)(\})</string>
						<key>name</key>
						<string>meta.directive.inheritDoc.jsppDoc</string>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.begin.jsppDoc</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.other.documentation.directive.link.jsppDoc</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.keyword.jsppDoc</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>markup.underline.link.jsppDoc</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>string.other.link.title.jsppDoc</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.end.jsppDoc</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(\{)((\@)link)(?:\s+(\S+?))?(?:\s+(.+?))?\s*(\})</string>
						<key>name</key>
						<string>meta.directive.link.jsppDoc</string>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.begin.jsppDoc</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.other.documentation.directive.linkplain.jsppDoc</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.keyword.jsppDoc</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>markup.underline.linkplain.jsppDoc</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>string.other.link.title.jsppDoc</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.end.jsppDoc</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(\{)((\@)linkplain)(?:\s+(\S+?))?(?:\s+(.+?))?\s*(\})</string>
						<key>name</key>
						<string>meta.directive.linkplain.jsppDoc</string>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.begin.jsppDoc</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.other.documentation.directive.value.jsppDoc</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.keyword.jsppDoc</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>variable.other.jsppDoc</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.directive.end.jsppDoc</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(\{)((\@)value)\s*(\S+?)?\s*(\})</string>
						<key>name</key>
						<string>meta.directive.value.jsppDoc</string>
					</dict>
				</array>
			</dict>
			<key>invalid</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>^(?!\s*\*).*$\n?</string>
						<key>name</key>
						<string>invalid.illegal.missing-asterisk.jsppDoc</string>
					</dict>
				</array>
			</dict>
		</dict>
	</dict>
		<key>constants-and-special-vars</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(true|false|null|undefined)\b</string>
					<key>name</key>
					<string>constant.language.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(this|super)\b</string>
					<key>name</key>
					<string>variable.language.jspp</string>
				</dict>

				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dereference.jspp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\.)?\b([A-Z][A-Z0-9_]+)(?!&lt;|\.class|\s*\w+\s*=)\b</string>
					<key>name</key>
					<string>constant.other.jspp</string>
				</dict>
			</array>
		</dict>
		<key>enums</key>
		<dict>
			<key>begin</key>
			<string>^(?=\s*[A-Z0-9_]+\s*({|\(|,))</string>
			<key>end</key>
			<string>(?=;|})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\w+</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.enum.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=,|;|})</string>
					<key>name</key>
					<string>meta.enum.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>end</key>
							<string>}</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#class-body</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(try|catch|finally|throw)\b</string>
					<key>name</key>
					<string>keyword.control.catch-exception.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\?|:</string>
					<key>name</key>
					<string>keyword.control.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(if|in|do|for|new|let|else|case|with|while|break|const|yield|return|typeof|delete|switch|default|continue|debugger|instanceof|export|import|external|module|foreach|typeid|implicit|explicit)\b</string>
					<key>name</key>
					<string>keyword.control.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(instanceof)\b</string>
					<key>name</key>
					<string>keyword.operator.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,|:|===|==|!==|!=|&lt;&lt;=|&lt;&lt;|&lt;=|&lt;|&gt;&gt;&gt;=|&gt;&gt;&gt;|&gt;&gt;=|&gt;&gt;|&gt;=|&gt;)</string>
					<key>name</key>
					<string>keyword.operator.comparison.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(=|\+=|\-=|\*=|\/=|\%=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\-|\+\+)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-|\+|\*|\/|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(!|&amp;&amp;=|&amp;&amp;|&amp;=|&amp;|\|\||\|\|=|\|=|\||\^=|\^|\~|\?=)</string>
					<key>name</key>
					<string>keyword.operator.logical.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\S)\.(?=\S)</string>
					<key>name</key>
					<string>keyword.operator.dereference.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.jspp</string>
				</dict>
			</array>
		</dict>

		<key>object-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b((?:[a-z]\w*\.)*[A-Z]+\w*)&lt;</string>
					<key>end</key>
					<string>&gt;|[^\w\s,\?&lt;\[\]]</string>
					<key>name</key>
					<string>storage.type.generic.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>&lt;</string>
							<key>comment</key>
							<string>This is just to support &lt;&gt;'s with no actual type prefix</string>
							<key>end</key>
							<string>&gt;|[^\w\s,\[\]&lt;]</string>
							<key>name</key>
							<string>storage.type.generic.jspp</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b((?:[a-z]\w*\.)*[A-Z]+\w*)(?=\[)</string>
					<key>end</key>
					<string>(?=[^\]\s])</string>
					<key>name</key>
					<string>storage.type.object.array.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\[</string>
							<key>end</key>
							<string>\]</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dereference.jspp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(?:[a-z]\w*(\.))*[A-Z]+\w*\b</string>
					<key>name</key>
					<string>storage.type.jspp</string>
				</dict>
			</array>
		</dict>

		<key>object-types-inherited</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b((?:[a-z]\w*\.)*[A-Z]+\w*)&lt;</string>
					<key>end</key>
					<string>&gt;|[^\w\s,&lt;]</string>
					<key>name</key>
					<string>entity.other.inherited-class.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>&lt;</string>
							<key>comment</key>
							<string>This is just to support &lt;&gt;'s with no actual type prefix</string>
							<key>end</key>
							<string>&gt;|[^\w\s,&lt;]</string>
							<key>name</key>
							<string>storage.type.generic.jspp</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dereference.jspp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(?:[a-z]\w*(\.))*[A-Z]+\w*</string>
					<key>name</key>
					<string>entity.other.inherited-class.jspp</string>
				</dict>
			</array>
		</dict>
		<key>parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>final</string>
					<key>name</key>
					<string>storage.modifier.jspp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primitive-arrays</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primitive-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object-types</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\w+</string>
					<key>name</key>
					<string>variable.parameter.jspp</string>
				</dict>
			</array>
		</dict>
		<key>parens</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#code</string>
				</dict>
			</array>
		</dict>
		<key>primitive-arrays</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:bool|string|byte|short|int|long|float|double|char|void|signed|unsigned|var|function)(\[\])*\b</string>
					<key>name</key>
					<string>storage.type.primitive.array.jspp</string>
				</dict>
			</array>
		</dict>
		<key>primitive-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:bool|string|byte|short|int|long|float|double|char|void|signed|unsigned|var|function)\b</string>
					<key>name</key>
					<string>storage.type.primitive.jspp</string>
				</dict>
			</array>
		</dict>
		<key>storage-modifiers</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.jspp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(private|protected|public|static|final|inline|property|abstract|optional|virtual|override)\b</string>
		</dict>
		<key>storage-modifier-property</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.property.jspp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(property)\b</string>
		</dict>
		<key>keyword-function</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.function.jspp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(function)\b</string>
		</dict>
		<key>keyword-colon</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.colon.jspp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(:)\b</string>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
				    <string>(\\(x\h{2}|u\h{4}|["'`ntr]))</string>
					<key>name</key>
					<string>constant.character.escape.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.jspp</string>
				</dict>		
			</array>
		</dict>
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)%
                        (\d+\$)?                                    # field (argument #)
                        [#0\- +']*                                  # flags
                        [,;:_]?                                     # separator character (AltiVec)
                        ((-?\d+)|\*(-?\d+\$)?)?                     # minimum field width
                        (\.((-?\d+)|\*(-?\d+\$)?)?)?                # precision
                        [diouxXDOUeEfFgGaAcCsSpnvtTbyYhHmMzZ%]      # conversion type
                    </string>
					<key>name</key>
					<string>constant.other.placeholder.jspp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>invalid.illegal.placeholder.jspp</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>[(")|(";)]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.jspp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>[(')|(';)]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.jspp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.jspp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>[`|`;]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.jspp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.raw.jspp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>throws</key>
		<dict>
			<key>begin</key>
			<string>throws</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.jspp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={|;)</string>
			<key>name</key>
			<string>meta.throwables.jspp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#object-types</string>
				</dict>
			</array>
		</dict>
		<key>values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants-and-special-vars</string>
				</dict>
			</array>
		</dict>
	</dict>

	
	<key>scopeName</key>
	<string>source.jspp</string>
	<key>uuid</key>
	<string>2B449DF6-6B1D-11D9-94EC-000D93589AF6</string>
</dict>
</plist>